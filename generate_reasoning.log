2024-09-15 23:14:28,687 - INFO - Starting generation process with input file: output.ssml and service: openai
2024-09-15 23:14:28,688 - INFO - Created output directory: /Users/ryan/projects/Podcastic/generated/output
2024-09-15 23:14:28,688 - DEBUG - Read content from input file: /Users/ryan/projects/Podcastic/output.ssml
2024-09-15 23:14:28,694 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-09-15 23:14:28,694 - DEBUG - load_verify_locations cafile='/Users/ryan/miniconda3/envs/podcastic/lib/python3.12/site-packages/certifi/cacert.pem'
2024-09-15 23:14:28,723 - INFO - Using openai TTS service
2024-09-15 23:14:28,744 - DEBUG - Starting SSML processing
2024-09-15 23:14:28,755 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "AI hallucinations are often misunderstood as mere errors, but they can actually reveal the model's creative problem-solving abilities. By recognizing this, we can start to see how these moments might lead to innovative solutions rather than just pitfalls. What do you think about that perspective?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:28,757 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:28,758 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-09-15 23:14:28,853 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x120957f50>
2024-09-15 23:14:28,854 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1207cfb50> server_hostname='api.openai.com' timeout=5.0
2024-09-15 23:14:28,879 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x120957e30>
2024-09-15 23:14:28,880 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:28,881 - DEBUG - send_request_headers.complete
2024-09-15 23:14:28,881 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:28,881 - DEBUG - send_request_body.complete
2024-09-15 23:14:28,881 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:29,606 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:29 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'588'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_c54b03fc2b8c9431ebc0b5ebe0c5b18f'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=CWg5bujgOWz.J7S30dpfpPLLRVBH8cYxn62dLVI6S7s-1726456469-1.0.1.1-NyrhpNPXqxBii_OnVl9YuDk5h_IpY6KoRT6DfpH3H5sbwSIHtp.CQRtaJBtFcjQBggqBUx.5VUPn81BAuRhACQ; path=/; expires=Mon, 16-Sep-24 03:44:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=6o61Z6MKkfuMiFUrG_MwcC77riKeibntT8P7u0.idK8-1726456469664-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3dafc2fdf0a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:29,610 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:29,611 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:32,075 - DEBUG - receive_response_body.complete
2024-09-15 23:14:32,075 - DEBUG - response_closed.started
2024-09-15 23:14:32,076 - DEBUG - response_closed.complete
2024-09-15 23:14:32,077 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers([('date', 'Mon, 16 Sep 2024 03:14:29 GMT'), ('content-type', 'audio/mpeg'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'anthus-ai-solutions'), ('openai-processing-ms', '588'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15552000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '100'), ('x-ratelimit-remaining-requests', '99'), ('x-ratelimit-reset-requests', '600ms'), ('x-request-id', 'req_c54b03fc2b8c9431ebc0b5ebe0c5b18f'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=CWg5bujgOWz.J7S30dpfpPLLRVBH8cYxn62dLVI6S7s-1726456469-1.0.1.1-NyrhpNPXqxBii_OnVl9YuDk5h_IpY6KoRT6DfpH3H5sbwSIHtp.CQRtaJBtFcjQBggqBUx.5VUPn81BAuRhACQ; path=/; expires=Mon, 16-Sep-24 03:44:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=6o61Z6MKkfuMiFUrG_MwcC77riKeibntT8P7u0.idK8-1726456469664-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '8c3dafc2fdf0a4b8-MIA'), ('alt-svc', 'h3=":443"; ma=86400')])
2024-09-15 23:14:32,078 - DEBUG - request_id: req_c54b03fc2b8c9431ebc0b5ebe0c5b18f
2024-09-15 23:14:32,089 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, Ava, if AI hallucinations are like spell-check suggestions, does that mean we should just laugh them off and keep going? Or is there a point where we need to take them seriously?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:32,091 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:32,092 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:32,093 - DEBUG - send_request_headers.complete
2024-09-15 23:14:32,093 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:32,093 - DEBUG - send_request_body.complete
2024-09-15 23:14:32,093 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:34,172 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:34 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'1802'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_815a7f34ae42fdde39c70f23d9177c87'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3dafd708b6a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:34,173 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:34,174 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:34,832 - DEBUG - receive_response_body.complete
2024-09-15 23:14:34,832 - DEBUG - response_closed.started
2024-09-15 23:14:34,833 - DEBUG - response_closed.complete
2024-09-15 23:14:34,833 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:34 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '1802', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_815a7f34ae42fdde39c70f23d9177c87', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3dafd708b6a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:34,834 - DEBUG - request_id: req_815a7f34ae42fdde39c70f23d9177c87
2024-09-15 23:14:34,842 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "AI hallucinations can often be seen as a reflection of the model's attempt to make sense of incomplete information, much like how we sometimes fill in the blanks in conversations. This ability can actually enhance user experience by allowing for smoother interactions, rather than getting bogged down in endless clarifying questions. What do you think about that approach?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:34,843 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:34,846 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:34,847 - DEBUG - send_request_headers.complete
2024-09-15 23:14:34,847 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:34,847 - DEBUG - send_request_body.complete
2024-09-15 23:14:34,847 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:35,999 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:36 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'895'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_3b210a69d9335b7e628b66797085a8dc'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3dafe84901a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:36,000 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:36,001 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:38,712 - DEBUG - receive_response_body.complete
2024-09-15 23:14:38,712 - DEBUG - response_closed.started
2024-09-15 23:14:38,712 - DEBUG - response_closed.complete
2024-09-15 23:14:38,713 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:36 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '895', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_3b210a69d9335b7e628b66797085a8dc', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3dafe84901a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:38,714 - DEBUG - request_id: req_3b210a69d9335b7e628b66797085a8dc
2024-09-15 23:14:38,722 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if AI is like that friend who always tries to fill in the blanks but sometimes gets it hilariously wrong, how do we know when to trust it and when to just roll our eyes?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:38,723 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:38,724 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:38,725 - DEBUG - send_request_headers.complete
2024-09-15 23:14:38,725 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:38,725 - DEBUG - send_request_body.complete
2024-09-15 23:14:38,725 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:39,342 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:39 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'507'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_9f7877ae4608c4547781f7482ee51a02'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0007868a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:39,343 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:39,344 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:40,328 - DEBUG - receive_response_body.complete
2024-09-15 23:14:40,328 - DEBUG - response_closed.started
2024-09-15 23:14:40,328 - DEBUG - response_closed.complete
2024-09-15 23:14:40,328 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:39 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '507', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_9f7877ae4608c4547781f7482ee51a02', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0007868a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:40,329 - DEBUG - request_id: req_9f7877ae4608c4547781f7482ee51a02
2024-09-15 23:14:40,334 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "High-profile AI mistakes, like the ones we mentioned earlier, can have serious consequences for companies, leading to financial losses and reputational damage. It's crucial for organizations to understand these risks and implement strategies to mitigate them while still leveraging AI's potential. What do you think companies should focus on to balance innovation with caution?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:40,335 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:40,335 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:40,336 - DEBUG - send_request_headers.complete
2024-09-15 23:14:40,336 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:40,336 - DEBUG - send_request_body.complete
2024-09-15 23:14:40,336 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:41,885 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:41 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'986'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_af732307dbfbae8987ae5813172572fb'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db00a9a58a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:41,887 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:41,887 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:42,933 - DEBUG - receive_response_body.complete
2024-09-15 23:14:42,933 - DEBUG - response_closed.started
2024-09-15 23:14:42,933 - DEBUG - response_closed.complete
2024-09-15 23:14:42,934 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:41 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '986', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_af732307dbfbae8987ae5813172572fb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db00a9a58a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:42,934 - DEBUG - request_id: req_af732307dbfbae8987ae5813172572fb
2024-09-15 23:14:42,941 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if these AI mistakes can cost companies big bucks, how do they even recover from that? Do they just throw a party and hope for the best?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:42,943 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:42,944 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:42,944 - DEBUG - send_request_headers.complete
2024-09-15 23:14:42,945 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:42,945 - DEBUG - send_request_body.complete
2024-09-15 23:14:42,945 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:43,983 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:43 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'594'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_63f9336e9ef8ea1fd61ecfdefdb9ec1d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db01adb33a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:43,984 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:43,985 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:44,503 - DEBUG - receive_response_body.complete
2024-09-15 23:14:44,504 - DEBUG - response_closed.started
2024-09-15 23:14:44,504 - DEBUG - response_closed.complete
2024-09-15 23:14:44,504 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:43 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '594', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_63f9336e9ef8ea1fd61ecfdefdb9ec1d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db01adb33a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:44,505 - DEBUG - request_id: req_63f9336e9ef8ea1fd61ecfdefdb9ec1d
2024-09-15 23:14:44,510 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'High-profile AI mistakes can lead to significant financial losses and damage to reputations, but they also serve as important lessons for organizations. By analyzing these incidents, companies can develop better strategies to mitigate risks while still embracing the innovative potential of AI. What do you think are some effective ways for businesses to learn from these mistakes?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:44,511 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:44,511 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:44,512 - DEBUG - send_request_headers.complete
2024-09-15 23:14:44,512 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:44,512 - DEBUG - send_request_body.complete
2024-09-15 23:14:44,512 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:45,387 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:45 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'704'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_8c5a0e536d1d91eeb5fb2e45ede8c19a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db024ac28a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:45,389 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:45,389 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:48,506 - DEBUG - receive_response_body.complete
2024-09-15 23:14:48,507 - DEBUG - response_closed.started
2024-09-15 23:14:48,507 - DEBUG - response_closed.complete
2024-09-15 23:14:48,507 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:45 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '704', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_8c5a0e536d1d91eeb5fb2e45ede8c19a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db024ac28a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:48,508 - DEBUG - request_id: req_8c5a0e536d1d91eeb5fb2e45ede8c19a
2024-09-15 23:14:48,516 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if these AI mistakes can lead to big financial hits, do companies have a secret stash of cash just for AI blunders, or do they just hope their next product launch goes viral to cover the losses?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:48,519 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:48,519 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:48,520 - DEBUG - send_request_headers.complete
2024-09-15 23:14:48,520 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:48,520 - DEBUG - send_request_body.complete
2024-09-15 23:14:48,521 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:49,268 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:49 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'573'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_c69e9a48deaaa1056f64491719981060'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db03dbbeaa4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:49,269 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:49,270 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:50,906 - DEBUG - receive_response_body.complete
2024-09-15 23:14:50,907 - DEBUG - response_closed.started
2024-09-15 23:14:50,907 - DEBUG - response_closed.complete
2024-09-15 23:14:50,908 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:49 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '573', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_c69e9a48deaaa1056f64491719981060', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db03dbbeaa4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:50,908 - DEBUG - request_id: req_c69e9a48deaaa1056f64491719981060
2024-09-15 23:14:50,919 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'When we label AI outputs as "hallucinations," we often overlook the potential for creativity and innovation that these moments can bring. By reframing our understanding, we can start to see how these instances might actually inspire new ideas and solutions. What do you think about the idea of embracing this creative aspect of AI?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:50,921 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:50,922 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:50,923 - DEBUG - send_request_headers.complete
2024-09-15 23:14:50,923 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:50,923 - DEBUG - send_request_body.complete
2024-09-15 23:14:50,923 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:51,865 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:51 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'719'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_554010ec2dc3ec66ebc02fb8a21db86b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db04ccaefa4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:51,867 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:51,867 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:54,272 - DEBUG - receive_response_body.complete
2024-09-15 23:14:54,273 - DEBUG - response_closed.started
2024-09-15 23:14:54,273 - DEBUG - response_closed.complete
2024-09-15 23:14:54,273 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:51 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '719', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_554010ec2dc3ec66ebc02fb8a21db86b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db04ccaefa4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:54,274 - DEBUG - request_id: req_554010ec2dc3ec66ebc02fb8a21db86b
2024-09-15 23:14:54,282 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if we start seeing these AI "hallucinations" as features, does that mean we should be ready for some creative surprises? I mean, who doesn\'t love a good plot twist, right?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:54,284 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:54,285 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:54,286 - DEBUG - send_request_headers.complete
2024-09-15 23:14:54,286 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:54,287 - DEBUG - send_request_body.complete
2024-09-15 23:14:54,287 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:55,209 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:55 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'688'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_10cfd4952bef9330709cb899f813f638'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db061cf47a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:55,210 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:55,211 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:56,186 - DEBUG - receive_response_body.complete
2024-09-15 23:14:56,186 - DEBUG - response_closed.started
2024-09-15 23:14:56,186 - DEBUG - response_closed.complete
2024-09-15 23:14:56,187 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:55 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '688', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_10cfd4952bef9330709cb899f813f638', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db061cf47a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:56,187 - DEBUG - request_id: req_10cfd4952bef9330709cb899f813f638
2024-09-15 23:14:56,195 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'When we label AI outputs as "hallucinations," we often miss the opportunity to explore their potential for creativity and innovation. By shifting our perspective, we can start to see these moments as a chance to inspire new ideas rather than just pitfalls. What do you think about the idea of embracing this creative aspect of AI?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:14:56,197 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:56,197 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:56,198 - DEBUG - send_request_headers.complete
2024-09-15 23:14:56,198 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:56,198 - DEBUG - send_request_body.complete
2024-09-15 23:14:56,198 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:57,088 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:57 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'678'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_0248d33de187525784b7da823aaa768b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db06db9b0a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:57,090 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:57,091 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:14:58,887 - DEBUG - receive_response_body.complete
2024-09-15 23:14:58,887 - DEBUG - response_closed.started
2024-09-15 23:14:58,888 - DEBUG - response_closed.complete
2024-09-15 23:14:58,888 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:57 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '678', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_0248d33de187525784b7da823aaa768b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db06db9b0a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:14:58,889 - DEBUG - request_id: req_0248d33de187525784b7da823aaa768b
2024-09-15 23:14:58,895 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'Shifting gears a bit, what about Argument for viewing hallucinations as features, not flaws?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:14:58,898 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:14:58,899 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:14:58,900 - DEBUG - send_request_headers.complete
2024-09-15 23:14:58,900 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:14:58,901 - DEBUG - send_request_body.complete
2024-09-15 23:14:58,901 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:14:59,777 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:14:59 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'650'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_4b1fbe6673e2ce1d83a5503d294a4a8f'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db07e9867a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:14:59,778 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:14:59,778 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:00,558 - DEBUG - receive_response_body.complete
2024-09-15 23:15:00,559 - DEBUG - response_closed.started
2024-09-15 23:15:00,559 - DEBUG - response_closed.complete
2024-09-15 23:15:00,560 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:14:59 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '650', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_4b1fbe6673e2ce1d83a5503d294a4a8f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db07e9867a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:00,560 - DEBUG - request_id: req_4b1fbe6673e2ce1d83a5503d294a4a8f
2024-09-15 23:15:00,568 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'AI hallucinations, much like those quirky spell-check suggestions, can actually lead to unexpected creativity. By embracing these moments, we can discover new ideas and solutions that we might not have considered otherwise. How do you think we can encourage this kind of creative thinking in our interactions with AI?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:00,570 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:00,571 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:00,572 - DEBUG - send_request_headers.complete
2024-09-15 23:15:00,572 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:00,573 - DEBUG - send_request_body.complete
2024-09-15 23:15:00,573 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:01,490 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:01 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'736'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_b9d874f4fb22a1d8045972e2a4c3bad1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0891a9ba4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:01,491 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:01,491 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:03,123 - DEBUG - receive_response_body.complete
2024-09-15 23:15:03,124 - DEBUG - response_closed.started
2024-09-15 23:15:03,124 - DEBUG - response_closed.complete
2024-09-15 23:15:03,124 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:01 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '736', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_b9d874f4fb22a1d8045972e2a4c3bad1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0891a9ba4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:03,124 - DEBUG - request_id: req_b9d874f4fb22a1d8045972e2a4c3bad1
2024-09-15 23:15:03,128 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if AI hallucinations are like those funny spell-check moments, does that mean we should keep a sense of humor when they happen? Or is there a risk of getting too comfortable and missing something important?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:03,129 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:03,130 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:03,130 - DEBUG - send_request_headers.complete
2024-09-15 23:15:03,130 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:03,130 - DEBUG - send_request_body.complete
2024-09-15 23:15:03,131 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:03,774 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:03 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'520'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_32c5a4a8854063bdd7954a6196c107c1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0991993a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:03,776 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:03,776 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:05,341 - DEBUG - receive_response_body.complete
2024-09-15 23:15:05,341 - DEBUG - response_closed.started
2024-09-15 23:15:05,342 - DEBUG - response_closed.complete
2024-09-15 23:15:05,342 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:03 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '520', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_32c5a4a8854063bdd7954a6196c107c1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0991993a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:05,342 - DEBUG - request_id: req_32c5a4a8854063bdd7954a6196c107c1
2024-09-15 23:15:05,349 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'AI hallucinations, much like those amusing spell-check errors, can actually teach us valuable lessons about flexibility and creativity in problem-solving. By embracing these quirks, we can learn to navigate the unexpected and even discover innovative solutions along the way. What do you think about using these moments as opportunities for growth?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:05,350 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:05,351 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:05,352 - DEBUG - send_request_headers.complete
2024-09-15 23:15:05,352 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:05,352 - DEBUG - send_request_body.complete
2024-09-15 23:15:05,352 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:06,270 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:06 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'750'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_8b9c8ecc7d8c9831a7ed8ba2a1493ae6'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0a6ff8ba4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:06,273 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:06,273 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:07,866 - DEBUG - receive_response_body.complete
2024-09-15 23:15:07,866 - DEBUG - response_closed.started
2024-09-15 23:15:07,867 - DEBUG - response_closed.complete
2024-09-15 23:15:07,867 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:06 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '750', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_8b9c8ecc7d8c9831a7ed8ba2a1493ae6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0a6ff8ba4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:07,868 - DEBUG - request_id: req_8b9c8ecc7d8c9831a7ed8ba2a1493ae6
2024-09-15 23:15:07,876 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if we treat AI hallucinations like those funny spell-check moments, how do we make sure we don’t end up sending a thank-you note that says, “Thanks for the meatball tickets!” instead?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:07,878 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:07,879 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:07,880 - DEBUG - send_request_headers.complete
2024-09-15 23:15:07,880 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:07,881 - DEBUG - send_request_body.complete
2024-09-15 23:15:07,881 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:08,658 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:08 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'590'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_e201f76a5011657ffa921e162f64db54'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0b6bed0a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:08,660 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:08,660 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:09,608 - DEBUG - receive_response_body.complete
2024-09-15 23:15:09,608 - DEBUG - response_closed.started
2024-09-15 23:15:09,608 - DEBUG - response_closed.complete
2024-09-15 23:15:09,609 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:08 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '590', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_e201f76a5011657ffa921e162f64db54', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0b6bed0a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:09,609 - DEBUG - request_id: req_e201f76a5011657ffa921e162f64db54
2024-09-15 23:15:09,620 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "AI's ability to fill in information gaps is crucial for creating smooth interactions, as it allows users to engage without getting bogged down in excessive detail. This flexibility not only enhances user experience but also encourages creativity in problem-solving, as the AI can generate responses that might inspire new ideas. What do you think about how this adaptability can change the way we approach tasks?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:09,622 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:09,623 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:09,623 - DEBUG - send_request_headers.complete
2024-09-15 23:15:09,624 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:09,624 - DEBUG - send_request_body.complete
2024-09-15 23:15:09,624 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:10,664 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:10 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'807'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_f6b6c3c8e731e5a52a1ba178baa0984e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0c199eea4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:10,666 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:10,666 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:14,477 - DEBUG - receive_response_body.complete
2024-09-15 23:15:14,478 - DEBUG - response_closed.started
2024-09-15 23:15:14,478 - DEBUG - response_closed.complete
2024-09-15 23:15:14,479 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:10 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '807', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_f6b6c3c8e731e5a52a1ba178baa0984e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0c199eea4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:14,479 - DEBUG - request_id: req_f6b6c3c8e731e5a52a1ba178baa0984e
2024-09-15 23:15:14,487 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if AI can fill in the gaps like a good friend at a trivia night, how do we make sure it doesn\'t end up giving us the wrong answers? I mean, I don\'t want to be the one saying, "Thanks for the meatball tickets!" at a concert!', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:14,489 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:14,490 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:14,491 - DEBUG - send_request_headers.complete
2024-09-15 23:15:14,491 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:14,491 - DEBUG - send_request_body.complete
2024-09-15 23:15:14,491 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:15,239 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:15 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'556'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_0d991c115878ed3d4ec09577a1f05574'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0e00a28a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:15,240 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:15,241 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:17,542 - DEBUG - receive_response_body.complete
2024-09-15 23:15:17,542 - DEBUG - response_closed.started
2024-09-15 23:15:17,543 - DEBUG - response_closed.complete
2024-09-15 23:15:17,543 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:15 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '556', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_0d991c115878ed3d4ec09577a1f05574', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0e00a28a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:17,544 - DEBUG - request_id: req_0d991c115878ed3d4ec09577a1f05574
2024-09-15 23:15:17,559 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "AI's ability to fill in information gaps not only enhances user experience but also allows for more creative problem-solving. By understanding this capability, you can better appreciate how AI can assist in various tasks without getting bogged down by excessive detail. What do you think about how this flexibility can change the way we approach our daily tasks?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:17,560 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:17,560 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:17,561 - DEBUG - send_request_headers.complete
2024-09-15 23:15:17,561 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:17,561 - DEBUG - send_request_body.complete
2024-09-15 23:15:17,561 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:18,708 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:18 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'898'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_38309f996d8e5c562d3f921a4f8e3a13'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db0f33fbca4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:18,710 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:18,710 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:20,129 - DEBUG - receive_response_body.complete
2024-09-15 23:15:20,130 - DEBUG - response_closed.started
2024-09-15 23:15:20,130 - DEBUG - response_closed.complete
2024-09-15 23:15:20,131 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:18 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '898', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_38309f996d8e5c562d3f921a4f8e3a13', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db0f33fbca4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:20,132 - DEBUG - request_id: req_38309f996d8e5c562d3f921a4f8e3a13
2024-09-15 23:15:20,140 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if AI can fill in the gaps like a good friend at a trivia night, does that mean we should be ready for some unexpected answers? I mean, I don\'t want to end up with a thank-you note that says, "Thanks for the meatball tickets!" instead of concert tickets!', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:20,141 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:20,142 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:20,143 - DEBUG - send_request_headers.complete
2024-09-15 23:15:20,143 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:20,143 - DEBUG - send_request_body.complete
2024-09-15 23:15:20,143 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:21,174 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:21 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'806'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_029db241515d9adae380a8f992ddd264'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db103581ea4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:21,176 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:21,177 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:22,355 - DEBUG - receive_response_body.complete
2024-09-15 23:15:22,356 - DEBUG - response_closed.started
2024-09-15 23:15:22,356 - DEBUG - response_closed.complete
2024-09-15 23:15:22,356 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:21 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '806', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_029db241515d9adae380a8f992ddd264', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db103581ea4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:22,357 - DEBUG - request_id: req_029db241515d9adae380a8f992ddd264
2024-09-15 23:15:22,364 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "AI's ability to make educated guesses is a powerful tool, but it also highlights the importance of human judgment in verifying those outputs. By combining AI's strengths with our critical thinking, we can enhance the overall effectiveness of our interactions. What do you think are some practical ways to ensure we’re using AI outputs wisely?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:22,366 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:22,367 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:22,367 - DEBUG - send_request_headers.complete
2024-09-15 23:15:22,368 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:22,368 - DEBUG - send_request_body.complete
2024-09-15 23:15:22,368 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:23,406 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:23 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'718'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_bb6dc53f66faf234b7f101f2ca7f1a18'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1114da2a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:23,408 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:23,408 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:26,407 - DEBUG - receive_response_body.complete
2024-09-15 23:15:26,407 - DEBUG - response_closed.started
2024-09-15 23:15:26,407 - DEBUG - response_closed.complete
2024-09-15 23:15:26,408 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:23 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '718', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_bb6dc53f66faf234b7f101f2ca7f1a18', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1114da2a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:26,408 - DEBUG - request_id: req_bb6dc53f66faf234b7f101f2ca7f1a18
2024-09-15 23:15:26,414 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if AI is making educated guesses, does that mean we should treat it like a friend who gives advice? You know, sometimes you just nod and smile, but other times you really need to think twice before taking their word for it!', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:26,415 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:26,415 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:26,415 - DEBUG - send_request_headers.complete
2024-09-15 23:15:26,415 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:26,415 - DEBUG - send_request_body.complete
2024-09-15 23:15:26,416 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:27,091 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:27 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'504'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_0c046aab9492777f21a743752d33551f'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db12a9fb9a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:27,092 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:27,092 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:29,328 - DEBUG - receive_response_body.complete
2024-09-15 23:15:29,329 - DEBUG - response_closed.started
2024-09-15 23:15:29,329 - DEBUG - response_closed.complete
2024-09-15 23:15:29,330 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:27 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '504', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_0c046aab9492777f21a743752d33551f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db12a9fb9a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:29,330 - DEBUG - request_id: req_0c046aab9492777f21a743752d33551f
2024-09-15 23:15:29,335 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'Understanding AI responses as educated guesses means recognizing that these outputs are often based on patterns and context rather than absolute certainty. This highlights the importance of human judgment in verifying information, ensuring that we use AI as a supportive tool rather than a definitive source. What do you think are some effective ways to balance trusting AI while still applying our own critical thinking?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:29,336 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:29,336 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:29,337 - DEBUG - send_request_headers.complete
2024-09-15 23:15:29,337 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:29,337 - DEBUG - send_request_body.complete
2024-09-15 23:15:29,337 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:30,228 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:30 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'746'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_4dd692795a6f88f79d051b93461fa11e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db13cd8c8a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:30,230 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:30,230 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:34,127 - DEBUG - receive_response_body.complete
2024-09-15 23:15:34,127 - DEBUG - response_closed.started
2024-09-15 23:15:34,128 - DEBUG - response_closed.complete
2024-09-15 23:15:34,128 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:30 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '746', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_4dd692795a6f88f79d051b93461fa11e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db13cd8c8a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:34,128 - DEBUG - request_id: req_4dd692795a6f88f79d051b93461fa11e
2024-09-15 23:15:34,136 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if we think of AI as a friend who sometimes gives us advice, how do we make sure we don’t end up taking the wrong advice, like asking for directions to the nearest meatball shop instead of the concert?', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:34,138 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:34,138 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:34,139 - DEBUG - send_request_headers.complete
2024-09-15 23:15:34,139 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:34,139 - DEBUG - send_request_body.complete
2024-09-15 23:15:34,140 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:34,873 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:34 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'528'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_10cdecb54781576e9ea81d9e4d4075b5'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db15add67a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:34,875 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:34,875 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:36,823 - DEBUG - receive_response_body.complete
2024-09-15 23:15:36,824 - DEBUG - response_closed.started
2024-09-15 23:15:36,825 - DEBUG - response_closed.complete
2024-09-15 23:15:36,825 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:34 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '528', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_10cdecb54781576e9ea81d9e4d4075b5', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db15add67a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:36,825 - DEBUG - request_id: req_10cdecb54781576e9ea81d9e4d4075b5
2024-09-15 23:15:36,830 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'To effectively collaborate with AI, organizations should focus on training programs that not only teach employees how to use AI tools but also emphasize critical thinking skills. This way, employees can better evaluate AI-generated content and make informed decisions based on its outputs. What do you think are some key elements that should be included in these training programs?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:36,831 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:36,832 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:36,832 - DEBUG - send_request_headers.complete
2024-09-15 23:15:36,832 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:36,833 - DEBUG - send_request_body.complete
2024-09-15 23:15:36,833 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:37,762 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:37 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'776'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_2807ee4d813348072a1c1f15853460d7'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db16bbdada4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:37,763 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:37,763 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:39,404 - DEBUG - receive_response_body.complete
2024-09-15 23:15:39,405 - DEBUG - response_closed.started
2024-09-15 23:15:39,405 - DEBUG - response_closed.complete
2024-09-15 23:15:39,406 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:37 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '776', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_2807ee4d813348072a1c1f15853460d7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db16bbdada4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:39,406 - DEBUG - request_id: req_2807ee4d813348072a1c1f15853460d7
2024-09-15 23:15:39,414 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if we’re training employees to work with AI, do you think we should also teach them how to handle those awkward moments when the AI gets it hilariously wrong? Like, “Thanks for the meatball tickets!” could be a real conversation starter!', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:39,418 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:39,419 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:39,419 - DEBUG - send_request_headers.complete
2024-09-15 23:15:39,420 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:39,420 - DEBUG - send_request_body.complete
2024-09-15 23:15:39,420 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:40,608 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:40 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'779'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_c84cafc7fbe670b5ab9f2dec91ca9389'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db17bdd02a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:40,609 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:40,610 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:41,671 - DEBUG - receive_response_body.complete
2024-09-15 23:15:41,672 - DEBUG - response_closed.started
2024-09-15 23:15:41,672 - DEBUG - response_closed.complete
2024-09-15 23:15:41,672 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:40 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '779', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_c84cafc7fbe670b5ab9f2dec91ca9389', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db17bdd02a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:41,673 - DEBUG - request_id: req_c84cafc7fbe670b5ab9f2dec91ca9389
2024-09-15 23:15:41,681 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'To effectively collaborate with AI, organizations should focus on creating training programs that not only teach employees how to use AI tools but also emphasize the importance of critical thinking. This way, employees can better assess AI-generated content and make informed decisions based on its outputs. What do you think are some practical examples of how companies can implement these training programs?', 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:41,683 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:41,684 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:41,685 - DEBUG - send_request_headers.complete
2024-09-15 23:15:41,685 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:41,685 - DEBUG - send_request_body.complete
2024-09-15 23:15:41,685 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:42,639 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:42 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'775'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_a0886345f4d2cf0a29b3a78c3f3fd827'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db189fbaba4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:42,640 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:42,641 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:46,086 - DEBUG - receive_response_body.complete
2024-09-15 23:15:46,087 - DEBUG - response_closed.started
2024-09-15 23:15:46,087 - DEBUG - response_closed.complete
2024-09-15 23:15:46,088 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:42 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '775', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_a0886345f4d2cf0a29b3a78c3f3fd827', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db189fbaba4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:46,088 - DEBUG - request_id: req_a0886345f4d2cf0a29b3a78c3f3fd827
2024-09-15 23:15:46,096 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "So, if we're training employees to work with AI, do you think we should also include some fun role-playing exercises? You know, like pretending the AI is a quirky coworker who sometimes gets things hilariously wrong?", 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:46,099 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:46,102 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:46,102 - DEBUG - send_request_headers.complete
2024-09-15 23:15:46,103 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:46,103 - DEBUG - send_request_body.complete
2024-09-15 23:15:46,103 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:47,151 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:47 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'792'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_9c5c5df3b7ec23a8889b35bba2263547'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1a59fc8a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:47,153 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:47,153 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:48,209 - DEBUG - receive_response_body.complete
2024-09-15 23:15:48,209 - DEBUG - response_closed.started
2024-09-15 23:15:48,209 - DEBUG - response_closed.complete
2024-09-15 23:15:48,210 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:47 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '792', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_9c5c5df3b7ec23a8889b35bba2263547', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1a59fc8a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:48,210 - DEBUG - request_id: req_9c5c5df3b7ec23a8889b35bba2263547
2024-09-15 23:15:48,218 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "As we look to the future of AI, it's essential to embrace the uncertainty that comes with it. By recognizing that innovation often arises from unexpected outcomes, we can foster a more collaborative environment between humans and AI, leading to breakthroughs we might not have anticipated. What do you think are some ways we can encourage this kind of innovative thinking in our workplaces?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:48,221 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:48,221 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:48,222 - DEBUG - send_request_headers.complete
2024-09-15 23:15:48,222 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:48,223 - DEBUG - send_request_body.complete
2024-09-15 23:15:48,223 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:49,209 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:49 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'784'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_db094e7bdb30c8310c6e082b3a0f305b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1b2dd20a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:49,211 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:49,211 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:51,281 - DEBUG - receive_response_body.complete
2024-09-15 23:15:51,281 - DEBUG - response_closed.started
2024-09-15 23:15:51,281 - DEBUG - response_closed.complete
2024-09-15 23:15:51,282 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:49 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '784', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_db094e7bdb30c8310c6e082b3a0f305b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1b2dd20a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:51,282 - DEBUG - request_id: req_db094e7bdb30c8310c6e082b3a0f305b
2024-09-15 23:15:51,290 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "So, if we're embracing uncertainty with AI, does that mean we should be ready for some surprises, like finding out our AI assistant has a hidden talent for poetry? I mean, who wouldn't want a robot bard on their team?", 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:51,291 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:51,292 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:51,293 - DEBUG - send_request_headers.complete
2024-09-15 23:15:51,293 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:51,293 - DEBUG - send_request_body.complete
2024-09-15 23:15:51,293 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:51,989 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:52 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'509'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_ef28aeb3e175c16ac501b3ac79be2ac3'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1c62831a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:51,991 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:51,991 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:54,043 - DEBUG - receive_response_body.complete
2024-09-15 23:15:54,044 - DEBUG - response_closed.started
2024-09-15 23:15:54,045 - DEBUG - response_closed.complete
2024-09-15 23:15:54,045 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:52 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '509', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_ef28aeb3e175c16ac501b3ac79be2ac3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1c62831a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:54,046 - DEBUG - request_id: req_ef28aeb3e175c16ac501b3ac79be2ac3
2024-09-15 23:15:54,058 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "As we embrace uncertainty in AI, it's important to recognize that innovation often thrives in environments where experimentation is encouraged. By allowing room for unexpected outcomes, we can foster a culture that values creativity and adaptability in our human-AI partnerships. What do you think are some practical ways to create that kind of environment in the workplace?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:54,060 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:54,060 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:54,061 - DEBUG - send_request_headers.complete
2024-09-15 23:15:54,061 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:54,061 - DEBUG - send_request_body.complete
2024-09-15 23:15:54,061 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:55,051 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:55 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'789'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_ec1adf39eac966a02a656d22512202bd'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1d758f4a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:55,054 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:55,054 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:56,900 - DEBUG - receive_response_body.complete
2024-09-15 23:15:56,900 - DEBUG - response_closed.started
2024-09-15 23:15:56,900 - DEBUG - response_closed.complete
2024-09-15 23:15:56,901 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:55 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '789', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_ec1adf39eac966a02a656d22512202bd', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1d758f4a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:56,901 - DEBUG - request_id: req_ec1adf39eac966a02a656d22512202bd
2024-09-15 23:15:56,910 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "That's an interesting point. Now, let's consider another angle.", 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:15:56,912 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:56,914 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:56,915 - DEBUG - send_request_headers.complete
2024-09-15 23:15:56,915 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:56,916 - DEBUG - send_request_body.complete
2024-09-15 23:15:56,916 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:57,902 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:57 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'642'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_42c298398f9019908a5244482a8b9287'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1e93a20a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:57,904 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:57,905 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:15:58,426 - DEBUG - receive_response_body.complete
2024-09-15 23:15:58,428 - DEBUG - response_closed.started
2024-09-15 23:15:58,428 - DEBUG - response_closed.complete
2024-09-15 23:15:58,433 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:57 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '642', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_42c298398f9019908a5244482a8b9287', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1e93a20a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:15:58,434 - DEBUG - request_id: req_42c298398f9019908a5244482a8b9287
2024-09-15 23:15:58,450 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "As we wrap up, it's important to remember that embracing AI's quirks can lead to unexpected innovations. By viewing these moments as opportunities rather than setbacks, you can foster a more creative and productive environment in your work. What are your thoughts on how we can apply this mindset in our daily tasks?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:15:58,452 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:15:58,452 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:15:58,453 - DEBUG - send_request_headers.complete
2024-09-15 23:15:58,453 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:15:58,453 - DEBUG - send_request_body.complete
2024-09-15 23:15:58,453 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:15:59,472 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:15:59 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'630'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_925d13357f277ffcee197332f7e09d2c'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db1f2cd02a4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:15:59,474 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:15:59,475 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:16:01,122 - DEBUG - receive_response_body.complete
2024-09-15 23:16:01,122 - DEBUG - response_closed.started
2024-09-15 23:16:01,123 - DEBUG - response_closed.complete
2024-09-15 23:16:01,124 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:15:59 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '630', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_925d13357f277ffcee197332f7e09d2c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db1f2cd02a4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:16:01,124 - DEBUG - request_id: req_925d13357f277ffcee197332f7e09d2c
2024-09-15 23:16:01,137 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': 'So, if we’re embracing AI’s quirks, does that mean we should also be ready for some creative brainstorming sessions? I mean, who knows what wild ideas might pop up when we let the AI run a little wild!', 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:16:01,138 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:16:01,139 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:16:01,139 - DEBUG - send_request_headers.complete
2024-09-15 23:16:01,139 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:16:01,139 - DEBUG - send_request_body.complete
2024-09-15 23:16:01,139 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:16:01,797 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:16:01 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'525'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_846f8dcfa56ac85dfe70518d5d4e2826'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db2039f3ea4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:16:01,799 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:16:01,799 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:16:03,477 - DEBUG - receive_response_body.complete
2024-09-15 23:16:03,478 - DEBUG - response_closed.started
2024-09-15 23:16:03,478 - DEBUG - response_closed.complete
2024-09-15 23:16:03,480 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:16:01 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '525', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_846f8dcfa56ac85dfe70518d5d4e2826', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db2039f3ea4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:16:03,480 - DEBUG - request_id: req_846f8dcfa56ac85dfe70518d5d4e2826
2024-09-15 23:16:03,488 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "That's a good summary of what we've covered. Shall we explore the next part of our topic?", 'model': 'tts-1', 'voice': 'shimmer'}}
2024-09-15 23:16:03,490 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:16:03,490 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:16:03,490 - DEBUG - send_request_headers.complete
2024-09-15 23:16:03,491 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:16:03,491 - DEBUG - send_request_body.complete
2024-09-15 23:16:03,491 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:16:04,074 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:16:04 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'415'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_eefb8df1cf6334ea07a1bfb0aaa8c745'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db2124f0ba4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:16:04,076 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:16:04,076 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:16:04,821 - DEBUG - receive_response_body.complete
2024-09-15 23:16:04,822 - DEBUG - response_closed.started
2024-09-15 23:16:04,822 - DEBUG - response_closed.complete
2024-09-15 23:16:04,823 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:16:04 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '415', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_eefb8df1cf6334ea07a1bfb0aaa8c745', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db2124f0ba4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:16:04,823 - DEBUG - request_id: req_eefb8df1cf6334ea07a1bfb0aaa8c745
2024-09-15 23:16:04,830 - DEBUG - Request options: {'method': 'post', 'url': '/audio/speech', 'headers': {'Accept': 'application/octet-stream'}, 'files': None, 'json_data': {'input': "Thanks for tuning in, everyone! Remember, embracing AI's quirks might just lead to some unexpected creativity—like finding out your AI can write a sonnet about meatballs! Until next time, keep those creative juices flowing!", 'model': 'tts-1', 'voice': 'onyx'}}
2024-09-15 23:16:04,831 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/speech
2024-09-15 23:16:04,832 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-15 23:16:04,832 - DEBUG - send_request_headers.complete
2024-09-15 23:16:04,832 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-15 23:16:04,833 - DEBUG - send_request_body.complete
2024-09-15 23:16:04,833 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-15 23:16:05,587 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 16 Sep 2024 03:16:05 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'anthus-ai-solutions'), (b'openai-processing-ms', b'613'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'100'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-reset-requests', b'600ms'), (b'x-request-id', b'req_ff3819cf18fbae4ff7da158ee052b174'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8c3db21aaf9ca4b8-MIA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-09-15 23:16:05,589 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-09-15 23:16:05,589 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-15 23:16:07,148 - DEBUG - receive_response_body.complete
2024-09-15 23:16:07,149 - DEBUG - response_closed.started
2024-09-15 23:16:07,149 - DEBUG - response_closed.complete
2024-09-15 23:16:07,149 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/speech "200 OK" Headers({'date': 'Mon, 16 Sep 2024 03:16:05 GMT', 'content-type': 'audio/mpeg', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'anthus-ai-solutions', 'openai-processing-ms': '613', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15552000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '100', 'x-ratelimit-remaining-requests': '99', 'x-ratelimit-reset-requests': '600ms', 'x-request-id': 'req_ff3819cf18fbae4ff7da158ee052b174', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8c3db21aaf9ca4b8-MIA', 'alt-svc': 'h3=":443"; ma=86400'})
2024-09-15 23:16:07,150 - DEBUG - request_id: req_ff3819cf18fbae4ff7da158ee052b174
2024-09-15 23:16:07,157 - INFO - Audio files and pauses generated in: /Users/ryan/projects/Podcastic/generated/output
2024-09-15 23:16:07,160 - DEBUG - Starting compilation process
2024-09-15 23:16:07,369 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/001_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:07,492 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/002_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:07,594 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/003_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:07,703 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/004_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:07,812 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/005_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:07,927 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/006_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,027 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/007_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,134 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/008_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,234 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/009_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,342 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/010_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,446 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/011_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,554 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/012_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,658 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/013_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,766 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/014_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,870 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/015_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:08,978 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/016_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,082 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/017_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,217 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/018_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,343 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/019_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,463 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/020_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,578 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/021_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,684 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/022_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,789 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/023_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:09,900 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/024_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,010 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/025_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,122 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/026_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,223 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/027_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,332 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/028_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,442 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/029_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,573 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/030_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,685 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/031_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,803 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/032_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:10,900 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/033_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:11,018 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/034_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:11,124 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/035_Ava.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:11,227 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/036_Marvin.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:11,336 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', '/Users/ryan/projects/Podcastic/generated/output/output_full_podcast.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-09-15 23:16:12,415 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'wav', '-i', '/var/folders/5m/jg8ql7p16q7gvhmrtxtx0glh0000gn/T/tmp7syxztdh', '-f', 'mp3', '/var/folders/5m/jg8ql7p16q7gvhmrtxtx0glh0000gn/T/tmpu6exrl7u'])
2024-09-15 23:16:19,701 - DEBUG - subprocess output: b'ffmpeg version 7.0.2 Copyright (c) 2000-2024 the FFmpeg developers'
2024-09-15 23:16:19,702 - DEBUG - subprocess output: b'  built with Apple clang version 15.0.0 (clang-1500.3.9.4)'
2024-09-15 23:16:19,702 - DEBUG - subprocess output: b"  configuration: --prefix=/opt/homebrew/Cellar/ffmpeg/7.0.2 --enable-shared --enable-pthreads --enable-version3 --cc=clang --host-cflags= --host-ldflags='-Wl,-ld_classic' --enable-ffplay --enable-gnutls --enable-gpl --enable-libaom --enable-libaribb24 --enable-libbluray --enable-libdav1d --enable-libharfbuzz --enable-libjxl --enable-libmp3lame --enable-libopus --enable-librav1e --enable-librist --enable-librubberband --enable-libsnappy --enable-libsrt --enable-libssh --enable-libsvtav1 --enable-libtesseract --enable-libtheora --enable-libvidstab --enable-libvmaf --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libxvid --enable-lzma --enable-libfontconfig --enable-libfreetype --enable-frei0r --enable-libass --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libspeex --enable-libsoxr --enable-libzmq --enable-libzimg --disable-libjack --disable-indev=jack --enable-videotoolbox --enable-audiotoolbox --enable-neon"
2024-09-15 23:16:19,702 - DEBUG - subprocess output: b'  libavutil      59.  8.100 / 59.  8.100'
2024-09-15 23:16:19,702 - DEBUG - subprocess output: b'  libavcodec     61.  3.100 / 61.  3.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libavformat    61.  1.100 / 61.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libavdevice    61.  1.100 / 61.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libavfilter    10.  1.100 / 10.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libswscale      8.  1.100 /  8.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libswresample   5.  1.100 /  5.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  libpostproc    58.  1.100 / 58.  1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'[aist#0:0/pcm_s16le @ 0x11da22ed0] Guessed Channel Layout: mono'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b"Input #0, wav, from '/var/folders/5m/jg8ql7p16q7gvhmrtxtx0glh0000gn/T/tmp7syxztdh':"
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  Duration: 00:43:22.32, bitrate: 384 kb/s'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  Stream #0:0: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 24000 Hz, mono, s16, 384 kb/s'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'Stream mapping:'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  Stream #0:0 -> #0:0 (pcm_s16le (native) -> mp3 (libmp3lame))'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'Press [q] to stop, [?] for help'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b"Output #0, mp3, to '/var/folders/5m/jg8ql7p16q7gvhmrtxtx0glh0000gn/T/tmpu6exrl7u':"
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  Metadata:'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'    TSSE            : Lavf61.1.100'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'  Stream #0:0: Audio: mp3, 24000 Hz, mono, s16p'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'      Metadata:'
2024-09-15 23:16:19,703 - DEBUG - subprocess output: b'        encoder         : Lavc61.3.100 libmp3lame'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=     512KiB time=00:02:51.40 bitrate=  24.5kbits/s speed= 339x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    1280KiB time=00:05:46.68 bitrate=  30.2kbits/s speed= 343x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    1792KiB time=00:08:43.70 bitrate=  28.0kbits/s speed= 346x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    2560KiB time=00:11:46.29 bitrate=  29.7kbits/s speed= 350x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    3328KiB time=00:14:46.68 bitrate=  30.7kbits/s speed= 352x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    4096KiB time=00:17:48.98 bitrate=  31.4kbits/s speed= 353x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    4864KiB time=00:20:50.40 bitrate=  31.9kbits/s speed= 354x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    5376KiB time=00:23:52.94 bitrate=  30.7kbits/s speed= 355x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    6144KiB time=00:26:55.94 bitrate=  31.1kbits/s speed= 356x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    6912KiB time=00:30:02.25 bitrate=  31.4kbits/s speed= 357x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    7680KiB time=00:33:09.38 bitrate=  31.6kbits/s speed= 359x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    8448KiB time=00:36:16.65 bitrate=  31.8kbits/s speed= 360x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    9216KiB time=00:39:23.11 bitrate=  31.9kbits/s speed= 360x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=    9728KiB time=00:42:30.40 bitrate=  31.2kbits/s speed= 361x'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'[out#0/mp3 @ 0x11da21630] video:0KiB audio:10166KiB subtitle:0KiB other streams:0KiB global headers:0KiB muxing overhead: 0.002267%'
2024-09-15 23:16:19,704 - DEBUG - subprocess output: b'size=   10166KiB time=00:43:22.32 bitrate=  32.0kbits/s speed= 361x'
2024-09-15 23:16:19,714 - INFO - Compilation process completed
